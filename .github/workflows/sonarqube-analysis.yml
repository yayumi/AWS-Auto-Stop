name: SonarQube Analysis and Build
on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]
    types: [opened, synchronize, reopened]

jobs:
  sonarqube:
    name: Build and analyze
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov pylint
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          
      # Pylint 검사
      - name: Run Pylint
        run: |
          pylint --output-format=parsable --reports=no ./**/*.py > pylint-report.txt || true
          
      # 테스트 커버리지 검사
      - name: Run Tests with coverage
        run: |
          pytest --cov=. --cov-report=xml --cov-report=html tests/ || true
          
      # SonarQube 분석
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.projectKey=yayumi_AWS-Auto-Stop_158bc810-b369-4089-be0b-d9c6b7209894
            -Dsonar.sources=.
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.python.pylint.reportPath=pylint-report.txt
            -Dsonar.qualitygate.wait=true
            -Dsonar.qualitygate.timeout=300
            -Dsonar.python.version=3.8

      # Quality Gate 체크
      - name: SonarQube Quality Gate check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        # Quality Gate 실패 시에도 계속 진행
        continue-on-error: true

      # 추가적인 Quality Gate 상태 확인 및 출력
      - name: Check Quality Gate Status
        run: |
          sleep 5  # SonarQube 분석 결과가 업데이트될 때까지 대기
          QUALITY_GATE_STATUS=$(curl -s -u ${{ secrets.SONAR_TOKEN }}: "${{ secrets.SONAR_HOST_URL }}/api/qualitygates/project_status?projectKey=yayumi_AWS-Auto-Stop_158bc810-b369-4089-be0b-d9c6b7209894" | jq -r '.projectStatus.status')
          echo "Quality Gate Status: $QUALITY_GATE_STATUS"
          if [ "$QUALITY_GATE_STATUS" = "ERROR" ]; then
            echo "Quality Gate failed!"
            exit 1
          fi
        continue-on-error: true
