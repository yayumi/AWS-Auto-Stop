name: SonarQube Analysis

on:
  pull_request:
    branches: [ main,dev ]
    types: [opened, synchronize, reopened]
  push:
    branches: [ main,dev ]

jobs:
  sonarqube:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # 전체 히스토리 가져오기
    
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov pylint
          pip install -r requirements.txt
          
      # Pylint 검사 추가
      - name: Run Pylint
        run: |
          pylint --output-format=parsable --reports=no ./**/*.py > pylint-report.txt || true
          
      # 테스트 커버리지 검사 추가
      - name: Run Tests with coverage
        run: |
          pytest --cov=. --cov-report=xml --cov-report=html tests/
          
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.projectKey=yayumi_AWS-Auto-Stop_158bc810-b369-4089-be0b-d9c6b7209894
            -Dsonar.sources=.
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.python.pylint.reportPath=pylint-report.txt
            -Dsonar.qualitygate.wait=true
            -Dsonar.qualitygate.timeout=300
            -Dsonar.python.version=3.8

      # Quality Gate 결과 확인 단계 추가
      - name: SonarQube Quality Gate check
        uses: sonarsource/sonarqube-quality-gate-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          scanMetadataReportFile: .scannerwork/report-task.txt
        timeout-minutes: 5
